/*
       Licensed to the Apache Software Foundation (ASF) under one
       or more contributor license agreements.  See the NOTICE file
       distributed with this work for additional information
       regarding copyright ownership.  The ASF licenses this file
       to you under the Apache License, Version 2.0 (the
       "License"); you may not use this file except in compliance
       with the License.  You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing,
       software distributed under the License is distributed on an
       "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
       KIND, either express or implied.  See the License for the
       specific language governing permissions and limitations
       under the License.
 */

package com.example.kuaidi;

import android.os.Bundle;

import org.apache.cordova.*;

import android.view.Menu;
import android.view.MenuItem;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;
import org.json.JSONArray;
import org.json.JSONObject;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.Dialog;
import android.app.ProgressDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.pm.PackageManager.NameNotFoundException;
import android.net.Uri;
import android.os.Environment;
import android.os.Handler;
import android.os.Message;
import android.util.Log;

public class MainActivity extends DroidGap {
	public static int vcode;
	String newVerName = "";// 新版本名称
	int newVerCode = 3;// 新版本号
	ProgressDialog pd = null;
	final String UPDATE_SERVERAPK = "ApkUpdateAndroid.apk";

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		// Set by <content src="index.html" /> in config.xml
		// super.loadUrl(Config.getStartUrl());
		super.setIntegerProperty("splashscreen", R.drawable.splash_screen);
		super.loadUrl("file:///android_asset/www/index.html", 2000);

		updateVersion();
		// JSNotify js = new JSNotify();
		// // this.appView.addJavascriptInterface(js, "aa");
		// this.appView.addJavascriptInterface(new Object(){
		// public void android_exec()
		// {
		// System.out.println("aaaaa");
		// }
		// }, "test");
		// this.loadUrl("file:///android_asset/www/kd/index.html");
	}

	public void updateVersion() {
		final int verCode = this.getVerCode(this);
		vcode = verCode;
		if (getServerVer()) {
			if (newVerCode != verCode) {
				doNewVersionUpdate();// 更新版本
			} else {
				notNewVersionUpdate();
			}
		}
	}

	/* 获得版本号 */
	public int getVerCode(Context context) {
		int verCode = -1;
		try {
			String packName = context.getPackageName();
			verCode = context.getPackageManager().getPackageInfo(packName, 0).versionCode;
		} catch (NameNotFoundException e) {
			// TODO Auto-generated catch block
			Log.e("版本号获取异常", e.getMessage());
		}
		return verCode;
	}

	/* 获得版本名称 */
	public String getVerName(Context context) {
		String verName = "";
		try {
			String packName = context.getPackageName();
			verName = context.getPackageManager().getPackageInfo(packName, 0).versionName;
		} catch (NameNotFoundException e) {
			Log.e("版本名称获取异常", e.getMessage());
		}
		return verName;
	}

	/* 从服务器端获得版本号 */
	public boolean getServerVer() {
		new Thread(new Runnable() {
			
			@Override
			public void run() {
				// TODO Auto-generated method stub
				
			}
		}).start();
		try {
			// alert("start");
			System.out.println("start");
			URL url = new URL(
					"http://newsyue.8866.org:85/ExpressMobile/Version");
			HttpURLConnection httpConnection = (HttpURLConnection) url
					.openConnection();

			httpConnection.setDoInput(true);
			httpConnection.setDoOutput(true);
			httpConnection.setRequestMethod("GET");
			httpConnection.setUseCaches(false);
			System.out.println("connect");

			httpConnection.connect();

			System.out.println("connect over");
			// InputStreamReader reader = new
			// InputStreamReader(httpConnection.getInputStream());
			// BufferedReader bReader = new BufferedReader(reader);

			BufferedReader reader = new BufferedReader(new InputStreamReader(
					httpConnection.getInputStream()));
			String json = reader.readLine();
			reader.close();

			httpConnection.disconnect();

			alert(json);
			// JSONArray array = new JSONArray(json);
			// JSONObject jsonObj = array.getJSONObject(0);
			JSONObject jsonObject = new JSONObject(json);
			newVerCode = jsonObject.getInt("versioncode");

			alert("" + newVerCode);
			// newVerName = jsonObj.getString("verName");
		} catch (Exception e) {
			System.out.println("error:" + e.toString());
			// TODO Auto-generated catch block
			e.printStackTrace();
			return true;// 如果这里改为false 则不更新会退出程序
		}

		return true;
	}

	private void alert(String msg) {
		new AlertDialog.Builder(this).setTitle("软件更新").setMessage(msg)
				.setPositiveButton("确定", null).create().show();

	}

	/* 不更新版本 */
	public void notNewVersionUpdate() {
		int verCode = this.getVerCode(this);
		String verName = this.getVerName(this);
		StringBuffer sb = new StringBuffer();
		sb.append("当前版本：");
		sb.append(verName);
		sb.append(" Code:");
		sb.append(verCode);
		sb.append("\n已是最新版本，无需更新");
		Dialog dialog = new AlertDialog.Builder(this).setTitle("软件更新")
				.setMessage(sb.toString())
				.setPositiveButton("确定", new DialogInterface.OnClickListener() {

					@Override
					public void onClick(DialogInterface dialog, int which) {
						// TODO Auto-generated method stub
						finish();
					}
				}).create();
		dialog.show();
	}

	/* 更新版本 */
	public void doNewVersionUpdate() {
		int verCode = this.getVerCode(this);
		// String verName = this.getVerName(this);
		StringBuffer sb = new StringBuffer();
		sb.append("当前版本：");
		// sb.append(verName);
		// sb.append(" Code:");
		sb.append(verCode);
		sb.append(",发现版本：");
		// sb.append(newVerName);
		// sb.append(" Code:");
		sb.append(newVerCode);
		sb.append(",是否更新");
		Dialog dialog = new AlertDialog.Builder(MainActivity.this)
				.setTitle("软件更新")
				.setMessage(sb.toString())
				.setPositiveButton("更新", new DialogInterface.OnClickListener() {

					@Override
					public void onClick(DialogInterface dialog, int which) {
						// TODO Auto-generated method stub
						pd = new ProgressDialog(MainActivity.this);
						pd.setTitle("正在下载");
						pd.setMessage("请稍后");
						pd.setProgressStyle(ProgressDialog.STYLE_SPINNER);
						downFile("http://newsyue.8866.org:85/base/Exp_android_download");
					}
				})
				.setNegativeButton("暂不更新",
						new DialogInterface.OnClickListener() {

							@Override
							public void onClick(DialogInterface dialog,
									int which) {
								// TODO Auto-generated method stub
								// finish();
							}
						}).create();
		// 显示更新框
		dialog.show();
	}

	/* 下载apk */
	public void downFile(final String url) {
		pd.show();
		new Thread() {
			public void run() {
				HttpClient client = new DefaultHttpClient();
				HttpGet get = new HttpGet(url);
				HttpResponse response;
				try {
					response = client.execute(get);
					HttpEntity entity = response.getEntity();
					long length = entity.getContentLength();
					InputStream is = entity.getContent();
					FileOutputStream fileOutputStream = null;
					if (is != null) {
						File file = new File(
								Environment.getExternalStorageDirectory(),
								UPDATE_SERVERAPK);
						fileOutputStream = new FileOutputStream(file);
						byte[] b = new byte[1024];
						int charb = -1;
						int count = 0;
						while ((charb = is.read(b)) != -1) {
							fileOutputStream.write(b, 0, charb);
							count += charb;
						}
					}
					fileOutputStream.flush();
					if (fileOutputStream != null) {
						fileOutputStream.close();
					}
					down();
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		}.start();
	}

	Handler handler = new Handler() {
		@Override
		public void handleMessage(Message msg) {
			super.handleMessage(msg);
			pd.cancel();
			update();
		}
	};

	/* 下载完成，通过handler将下载对话框取消 */
	public void down() {
		new Thread() {
			public void run() {
				Message message = handler.obtainMessage();
				handler.sendMessage(message);
			}
		}.start();
	}

	/* 安装应用 */
	public void update() {
		Intent intent = new Intent(Intent.ACTION_VIEW);
		intent.setDataAndType(Uri.fromFile(new File(Environment
				.getExternalStorageDirectory(), UPDATE_SERVERAPK)),
				"application/vnd.android.package-archive");
		startActivity(intent);
	}

}
