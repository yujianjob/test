package com.example.echo;
import org.apache.cordova.api.CallbackContext;
import org.apache.cordova.api.CordovaPlugin;
import org.apache.cordova.api.PluginResult;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.view.Menu; 
import android.view.MenuItem;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;
import org.json.JSONArray;
import org.json.JSONObject;

import com.example.kuaidi.MainActivity;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.Dialog;
import android.app.ProgressDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.pm.PackageManager.NameNotFoundException;
import android.net.Uri;
import android.os.Environment;
import android.os.Handler;
import android.os.Message;
import android.util.Log;

public class EchoTest extends CordovaPlugin {
	String versioncode = "";


	ProgressDialog pd = null;
    
    @Override
    public boolean execute(String action, JSONArray args, CallbackContext callbackContext) throws JSONException {
        if (action.equals("echo")) {   //action=echo 
        	String str = "";
            String url = args.getString(0);  //  
            versioncode = args.getString(1);
             
            String code= ""+MainActivity.vcode;
            str=str+url+"-----"+versioncode+"---"+code+"-----"+"这是原生代码777777";
            
            if(versioncode!=code){
            	doNewVersionUpdate();
            	
            }
            
            //this.echo(str, callbackContext);
            return true;
        }else{
        	 	callbackContext.error("这不是一个echo操作");
        	 	return false;
        }
        
    }
    /*获得版本号*/
    public int getVerCode(Context context){
        int verCode = -1;
        try {
         String packName = context.getPackageName();
            verCode = context.getPackageManager().getPackageInfo(packName, 0).versionCode;
        } catch (NameNotFoundException e) {
            // TODO Auto-generated catch block
            Log.e("版本号获取异常", e.getMessage());
        }
        return verCode;
    }
    /*更新版本*/
    public void doNewVersionUpdate(){
    	//MainActivity.this.doNewVersionUpdate(MainActivity.vcode, versioncode);
        int verCode = MainActivity.vcode;
        StringBuffer sb = new StringBuffer();
        sb.append("当前版本：");
        sb.append(verCode);
        sb.append(",发现版本：");
        sb.append(versioncode);
        sb.append(",是否更新");
        AlertDialog dialog=	new AlertDialog.Builder(null)   
		.setTitle("确认")  
		.setMessage(sb.toString())
		.setPositiveButton("是", new DialogInterface.OnClickListener() {
            
            @Override
            public void onClick(DialogInterface dialog, int which) {
                // TODO Auto-generated method stub
                //finish();
            }
        }).create();
		 
		
        //Dialog dialog = new AlertDialog.Builder(this)
        //.setTitle("软件更新")
        //.setMessage(sb.toString())
        //.setPositiveButton("更新", new DialogInterface.OnClickListener() {
            
//            @Override
//            public void onClick(DialogInterface dialog, int which) {
//                // TODO Auto-generated method stub
//                pd = new ProgressDialog(MainActivity.this);
//                pd.setTitle("正在下载");
//                pd.setMessage("请稍后");
//                pd.setProgressStyle(ProgressDialog.STYLE_SPINNER);
//                downFile("http://newsyue.8866.org:85/base/Exp_android_download");
//            }
//        })
//        .setNegativeButton("暂不更新", new DialogInterface.OnClickListener() {
//            
//            @Override
//            public void onClick(DialogInterface dialog, int which) {
//                // TODO Auto-generated method stub
//                //finish();
//            }
//        }).create();
        //显示更新框
        dialog.show();
    }
    
    public void downFile(final String url){
        pd.show();
        new Thread(){
            public void run(){
                HttpClient client = new DefaultHttpClient();
                HttpGet get = new HttpGet(url);
                HttpResponse response;
                try {
                    response = client.execute(get);
                    HttpEntity entity = response.getEntity();
                    long length = entity.getContentLength();
                    InputStream is =  entity.getContent();
                    FileOutputStream fileOutputStream = null;
                    if(is != null){
                        File file = new File(Environment.getExternalStorageDirectory(),UPDATE_SERVERAPK);
                        fileOutputStream = new FileOutputStream(file);
                        byte[] b = new byte[1024];
                        int charb = -1;
                        int count = 0;
                        while((charb = is.read(b))!=-1){
                            fileOutputStream.write(b, 0, charb);
                            count += charb;
                        }
                    }
                    fileOutputStream.flush();
                    if(fileOutputStream!=null){
                        fileOutputStream.close();
                    }
                    down();
                }  catch (Exception e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }
            }
        }.start();
    }
    
    private void echo(String message, CallbackContext callbackContext) {
        if (message != null && message.length() > 0) {
            callbackContext.success(message);
        } else {
            callbackContext.error("Expected one non-empty string argument.");
        }
    }
}
