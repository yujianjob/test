@model LazyAtHome.WCF.Wash.Contract.DataContract.Mall_ProductDC
@{
    <script src="@Url.Content("~/Scripts/Common/uploadifyimage.js")" type="text/javascript"></script>
}

<!--报错信息-->
@Html.Raw(ViewBag.Script)

<div class="pageContent">
    <form method="post" action="@Url.Action("SaveGift", "Gift")" id="frmSaveGift" class="pageForm required-validate" onsubmit="return validateCallback(this, navTabAjaxDone);">
        <div class="pageFormContent" layouth="56">
            <fieldset>
                <legend>基本信息</legend>
                @Html.HiddenFor(model => model.ID)
                <p>
                    <label>类型类别：</label>
                    @if (Model.ID == 0)
                    {
                        <select class="combox" name="type" ref="combox_class" refurl="@Url.Action("TypeSelect")?typeid={value}">
                            <option value="-1">全部</option>
                            <option value="1">懒人卡</option>
                            <option value="2">其他礼品</option>
                        </select>
                        <select class="combox" name="class" id="combox_class">
                            <option value="-1">全部</option>
                        </select>
                    }
                    else
                    { 
                        @Html.DropDownList("PType", new SelectList(new List<SelectListItem> {
                            new SelectListItem { Text="全部", Value = "-1" },
                            new SelectListItem { Text="懒人卡", Value = "1" },
                            new SelectListItem { Text="其他礼品", Value = "99" }},
                                                        "Value", "Text", Model.Type), new {  disabled = "disabled" })
                        @Html.DropDownList("PClass", new SelectList(new List<SelectListItem> {
                            new SelectListItem { Text="全部", Value = "-1" },
                            new SelectListItem { Text="实物卡", Value = "1" },
                            new SelectListItem { Text="电子卡", Value = "2" },
                             new SelectListItem { Text="其他礼品", Value = "99" }},
                                                   "Value", "Text", Model.Class), new { disabled = "disabled"})
                        
                        <input type="hidden" name="type" value="@Model.Type"/>
                        <input type="hidden" name="class" value="@Model.Class"/>
                    }
                    

                    
                </p>
                <p>
                    <label>礼品名称：</label>
                    @Html.TextBoxFor(model => model.Name, new { @maxlength = 50, @class = "required" })
                </p>
                <p>
                    <label>类型用数值：</label>
                    @Html.TextBoxFor(model => model.TypeValue, new { @maxlength = 50, @class = "required" })
                </p>
                <p>
                    <label>搜索关键字：</label>
                    @Html.TextBoxFor(model => model.Keyword, new { @maxlength = 100, alt = "请以空格分隔" })
                </p>

                <p>
                    <label>总数量：</label>
                    @Html.TextBoxFor(model => model.TotalCount, new { @class = "digits" })
                </p>
                <p>
                    <label>剩余数量：</label>
                    @Html.TextBoxFor(model => model.LeftCount, new { @class = "digits" })
                </p>
                <p>
                    <label>已销售数量：</label>
                    @Html.TextBoxFor(model => model.SaleCount, new { @class = "digits" })
                </p>

                <p>
                    <label>排序：</label>
                    @Html.TextBoxFor(model => model.Sort, new { @class = "digits" })
                </p>

                <p>
                    <label>市场价：</label>
                    @Html.TextBoxFor(model => model.MarketPrice, new { @class = "number" })
                </p>
                <p>
                    <label>销售价：</label>
                    @Html.TextBoxFor(model => model.SalesPrice, new { @class = "number" })
                </p>

                @{    
                    var DateFrom = Convert.ToDateTime(Model.SellBeginDate).ToString("yyyy-MM-dd");
                    var DateTo = Convert.ToDateTime(Model.SellEndDate).ToString("yyyy-MM-dd");       
                }

                <p>
                    <label>销售开始时间：</label>
                    <input type="text" id="sellbegindate" name="sellbegindate"  value="@DateFrom" class="date" />
                    <a class="inputDateButton" href="javascript:;">选择</a>

                </p>
                <p>
                    <label>销售结束时间：</label>
                    <input type="text" id="sellenddate" name="sellenddate" value="@DateTo" class="date" />
                    <a class="inputDateButton" href="javascript:;">选择</a>

                </p>
                <p>
                    <label>站点：</label>
                    @Html.DropDownListFor(model => model.Site, (SelectList)ViewData["City"], new { @class = "combox" })
                </p>
                <p>
                    <label>状态：</label>
                    @Html.RadioButtonFor(model => model.Enable, 1, new { @checked = "checked" })启用
                    @Html.RadioButtonFor(model => model.Enable, 0)未开通
                </p>


                <p>
                    <dl class="nowrap">
                        <dt>描述：</dt>
                        <dd>
                            @Html.TextAreaFor(model => model.Content, new { @maxlength = 100, cols = "82", rows = "3", @class = "textarea" })
                        </dd>
                    </dl>
                </p>


            </fieldset>

            <fieldset>
                <legend>图片</legend>
                <table>
                    <tr>
                        <td width="200px" valign="top">
                            <input id="testFileInputL" type="file" name="giftimagel"
                                   uploaderoption="{
                                   swf:'../scripts/uploadify/scripts/uploadify.swf',
                            uploader:'@Url.Action("UploadImage", "Gift")',
                            formData:{imagetype:'giftimagel'},
                            buttonText:'大图上传',
                            fileSizeLimit:'200KB',
                            fileTypeDesc:'*.jpg;*.jpeg;*.gif;*.png;',
                            fileTypeExts:'*.jpg;*.jpeg;*.gif;*.png;',
                            auto:true,
                            multi:true,
                            onUploadSuccess:uploadifyImageSuccess
                            }" />

                            @Html.HiddenFor(model => model.PictureL, new { id = "hdgiftimagel" })
                            <input type="hidden" id="hdgiftimagelroot" value="@(LazyAtHome.Web.WebManage.CodeSource.Common.ConstConfig.IMAGE_PATH + LazyAtHome.Web.WebManage.CodeSource.Common.ConstConfig.Gift_IMG_PATH)" />
                            @{
                                string pathl = string.Empty;
                                if (!string.IsNullOrEmpty(Model.PictureL))
                                {
                                    pathl = LazyAtHome.Web.WebManage.CodeSource.Common.ConstConfig.IMAGE_PATH + LazyAtHome.Web.WebManage.CodeSource.Common.ConstConfig.Gift_IMG_PATH + Model.PictureL;
                                    
                                }
                                <img id="giftimagel" alt="@Model.PictureL" src="@pathl" />
                            }
                        </td>
                        <td width="200px" valign="top">
                            <input id="testFileInputM" type="file" name="giftimagem"
                                   uploaderoption="{
                                   swf:'../scripts/uploadify/scripts/uploadify.swf',
                            uploader:'@Url.Action("UploadImage", "Gift")',
                            formData:{imagetype:'giftimagem'},
                            buttonText:'中图上传',
                            fileSizeLimit:'200KB',
                            fileTypeDesc:'*.jpg;*.jpeg;*.gif;*.png;',
                            fileTypeExts:'*.jpg;*.jpeg;*.gif;*.png;',
                            auto:true,
                            multi:true,
                            onUploadSuccess:uploadifyImageSuccess
                            }" />

                            @Html.HiddenFor(model => model.PictureM, new { id = "hdgiftimagem" })
                            <input type="hidden" id="hdgiftimagemroot" value="@(LazyAtHome.Web.WebManage.CodeSource.Common.ConstConfig.IMAGE_PATH + LazyAtHome.Web.WebManage.CodeSource.Common.ConstConfig.Gift_IMG_PATH)" />
                            @{
                                string pathm = string.Empty;
                                if (!string.IsNullOrEmpty(Model.PictureM))
                                {
                                    pathm = LazyAtHome.Web.WebManage.CodeSource.Common.ConstConfig.IMAGE_PATH + LazyAtHome.Web.WebManage.CodeSource.Common.ConstConfig.Gift_IMG_PATH + Model.PictureM;
                                    
                                }
                                <img id="giftimagem" alt="@Model.PictureM" src="@pathm" />
                            }
                        </td>
                        <td width="200px" valign="top">
                            <input id="testFileInputS" type="file" name="giftimages"
                                   uploaderoption="{
                                   swf:'../scripts/uploadify/scripts/uploadify.swf',
                            uploader:'@Url.Action("UploadImage", "Gift")',
                            formData:{imagetype:'giftimages'},
                            buttonText:'小图上传',
                            fileSizeLimit:'200KB',
                            fileTypeDesc:'*.jpg;*.jpeg;*.gif;*.png;',
                            fileTypeExts:'*.jpg;*.jpeg;*.gif;*.png;',
                            auto:true,
                            multi:true,
                            onUploadSuccess:uploadifyImageSuccess
                            }" />

                            @Html.HiddenFor(model => model.PictureS, new { id = "hdgiftimages" })
                            <input type="hidden" id="hdgiftimagesroot" value="@(LazyAtHome.Web.WebManage.CodeSource.Common.ConstConfig.IMAGE_PATH + LazyAtHome.Web.WebManage.CodeSource.Common.ConstConfig.Gift_IMG_PATH)" />
                            @{
                                string paths = string.Empty;
                                if (!string.IsNullOrEmpty(Model.PictureS))
                                {
                                    paths = LazyAtHome.Web.WebManage.CodeSource.Common.ConstConfig.IMAGE_PATH + LazyAtHome.Web.WebManage.CodeSource.Common.ConstConfig.Gift_IMG_PATH + Model.PictureS;
                                    
                                }
                                <img id="giftimages" alt="@Model.PictureS" src="@paths" />
                            }


                        </td>
                    </tr>
                </table>

            </fieldset>

        </div>

        <div class="formBar">
            <ul>
                <!--<li><a class="buttonActive" href="javascript:;"><span>保存</span></a></li>-->
                <li><div class="buttonActive"><div class="buttonContent"><button type="submit" id="btnSave">保存</button></div></div></li>
                <li>
                    <div class="button"><div class="buttonContent"><button type="button" class="close">取消</button></div></div>
                </li>
            </ul>
        </div>
    </form>
</div>

