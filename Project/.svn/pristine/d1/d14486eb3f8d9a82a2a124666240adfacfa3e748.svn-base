@*通用 时间转换 FormatType 1:yyyy-MM-dd 2:yyyy-MM-dd HH:mm 3:yyyy-MM-dd HH:mm:ss*@
@helper FormatDate(DateTime? date, int FormatType = 2)
{
    string DateString = string.Empty;
    if (date != null)
    {
        if (FormatType == 1)
        {
            DateString = String.Format("{0:yyyy-MM-dd}", date);
        }
        else if (FormatType == 2)
        {
            DateString = String.Format("{0:yyyy-MM-dd HH:mm}", date);
        }
        else if (FormatType == 3)
        {
            DateString = String.Format("{0:yyyy-MM-dd HH:mm:ss}", date);
        }
    }
    @(string.Format(DateString));
}

@*通用 销售状态转义 *@
@helper FormatCommitStatus(int CommitStatus)
{
    string rtn = string.Empty;
    switch (CommitStatus)
    {
        case 0:
            rtn = "未上线";
            break;
        case 1:
            rtn = "已上线";
            break;
        case 2:
            rtn = "已下线";
            break;
        default:
            rtn = "未知：" + CommitStatus;
            break;
    }
    @(string.Format(rtn));
}

@*通用 运价类型转义  *@
@helper FormatProductType(int ProductType)
{
    string rtn = string.Empty;
    switch (ProductType)
    {
        case 1:
            rtn = "普通";
            break;
        case 2:
            rtn = "活动";
            break;
        default:
            rtn = "未知：" + ProductType;
            break;
    }
    @(string.Format(rtn));
}

@*通用 订单状态转义  *@
@helper FormatOrderStatus(int OrderStatus)
{
    string rtn = string.Empty;
    switch (OrderStatus)
    {
        case 0:
            rtn = "未审核订单";
            break;
        case 1:
            rtn = "创建订单";
            break;
        case 2:
            rtn = "完成订单";
            break;
        case 6:
            rtn = "已退单";
            break;
        case 7:
            rtn = "已拆单";
            break;
        default:
            rtn = "未知：" + OrderStatus;
            break;
    }
    @(string.Format(rtn));
}

@*通用 支付状态转义  *@
@helper FormatPayStatus(int PayStatus)
{
    string rtn = string.Empty;
    switch (PayStatus)
    {
        case 0:
            rtn = "未支付";
            break;
        case 1:
            rtn = "已支付";
            break;
        default:
            rtn = "未知：" + PayStatus;
            break;
    }
    @(string.Format(rtn));
}

@*通用 订单进度转义  *@
@helper FormatOrderStep(int OrderStep)
{
    string rtn = string.Empty;
    switch (OrderStep)
    {
        case 1:
            rtn = "下单";
            break;
        case 2:
            rtn = "取件中";
            break;
        case 3:
            rtn = "送洗中";
            break;
        case 4:
            rtn = "洗涤中";
            break;
        case 5:
            rtn = "出库中";
            break;
        case 6:
            rtn = "送件中";
            break;
        case 7:
            rtn = "完成";
            break;
        default:
            rtn = "未知：" + OrderStep;
            break;
    }
    @(string.Format(rtn));
}


@*通用 用户衣物签收状态转义  *@
@helper FormatUserSignType(int UserSignType)
{
    string rtn = string.Empty;
    switch (UserSignType)
    {
        case 0:
            rtn = "未签收";
            break;
        case 1:
            rtn = "已签收";
            break;
        default:
            rtn = "未知：" + UserSignType;
            break;
    }
    @(string.Format(rtn));
}