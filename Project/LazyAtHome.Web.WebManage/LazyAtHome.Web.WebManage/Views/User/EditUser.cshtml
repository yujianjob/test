@model LazyAtHome.Web.WebManage.Models.User.UserModel
@{
    <script src="@Url.Content("~/Scripts/User/useredit.js")" type="text/javascript"></script>
}

<div class="pageContent">
    <form method="post" action="@Url.Action("")" id="frmEditUser" class="pageForm required-validate" onsubmit="return validateCallback(this, navTabAjaxDone);">
        <div class="pageFormContent" layouth="56">
            <div class="tabs" currentindex="0" eventtype="click" >
                <div class="tabsHeader">
                    <div class="tabsHeaderContent">
                        <ul>
                            <li><a href="javascript:;"><span>基本信息</span></a></li>
                            <li><a href="javascript:;"><span>详细信息</span></a></li>
                            <li><a href="javascript:;"><span>收货地址</span></a></li>
                        </ul>
                    </div>
                </div>
                <div class="tabsContent">
                    <div layouth="95">
                        <!-- 用户基本信息 -->
                        @Html.HiddenFor(model => model.UserInfo.ID)
                        <p>
                            @Html.LabelFor(model => model.UserInfo.LoginName)
                            @Html.TextBoxFor(model => model.UserInfo.LoginName, new { @maxlength = 20, @readonly = "readonly" })
                        </p>
                        <p>
                            @Html.LabelFor(model => model.UserInfo.MPNo)
                            @Html.TextBoxFor(model => model.UserInfo.MPNo, new { @maxlength = 20, @readonly = "readonly" })
                            <a href="@Url.Action("EditSmsSend", "User")?mpno=@Model.UserInfo.MPNo" target="navTab" rel="editsmssend" title="短信下行" class="button"><span>短信下行</span></a>
                        </p>
                        <p>
                            @Html.LabelFor(model => model.UserInfo.Email)
                            @Html.TextBoxFor(model => model.UserInfo.Email, new { @maxlength = 20, @readonly = "readonly" })
                        </p>
                        <p>
                            @Html.LabelFor(model => model.UserInfo.Type)
                            @*@Html.TextBoxFor(model => model.UserInfo.Type, new { @maxlength = 20, @readonly = "readonly" })*@
                            @Html.DropDownList("Type", new SelectList(new List<SelectListItem> {
                            new SelectListItem { Text="个人用户", Value = "1" },},
                                                "Value", "Text", Model.UserInfo.Type), new { @class = "combox" })
                        </p>
                        <p>
                            @Html.LabelFor(model => model.UserInfo.Site)
                            @*@Html.TextBoxFor(model => model.UserInfo.Site, new { @maxlength = 20, @readonly = "readonly" })*@
                            @Html.DropDownListFor(model => model.UserInfo.Site, (SelectList)ViewData["Site"], new { @class = "combox" })
                        </p>
                        <p>
                            @Html.LabelFor(model => model.UserInfo.RegistSource)
                            @*@Html.TextBoxFor(model => model.UserInfo.RegistSource, new { @maxlength = 20, @readonly = "readonly" })*@
                            @Html.DropDownList("RegistSource", new SelectList(new List<SelectListItem> {
                            new SelectListItem { Text="网站", Value = "1" },
                            new SelectListItem { Text="微信", Value = "4" }},
                                              "Value", "Text", Model.UserInfo.RegistSource), new { @class = "combox" })
                        </p>
                        <p>
                            @Html.LabelFor(model => model.UserInfo.Money)
                            @Html.TextBoxFor(model => model.UserInfo.Money, new { @maxlength = 20, @readonly = "readonly", style = "width:60px;" })
                            <a href="@Url.Action("AmountLogIndex","User")?mpno=@Model.UserInfo.MPNo" target="navTab" rel="useramountloglist" title="余额日志" class="button"><span>余额日志</span></a>
                        </p>
                        <p>
                            @Html.LabelFor(model => model.UserInfo.Score)
                            @Html.TextBoxFor(model => model.UserInfo.Score, new { @maxlength = 20, @readonly = "readonly", style = "width:60px;" })
                            <a href="@Url.Action("ScoreLogIndex","User")?mpno=@Model.UserInfo.MPNo" target="navTab" rel="userscoreloglist" title="积分日志" class="button"><span>积分日志</span></a>

                        </p>
                        <p>
                            @Html.LabelFor(model => model.UserInfo.AccountStatus)
                            @*@Html.TextBoxFor(model => model.UserInfo.AccountStatus, new { @maxlength = 20, @readonly = "readonly" })*@
                            @Html.DropDownList("AccountStatus", new SelectList(new List<SelectListItem> {
                            new SelectListItem { Text="正常", Value = "1" },
                            new SelectListItem { Text="冻结", Value = "2" }},
                                    "Value", "Text", Model.UserInfo.AccountStatus), new { @class = "combox" })

                        </p>
                        <p>
                            @Html.LabelFor(model => model.UserInfo.UserStatus)
                            @*@Html.TextBoxFor(model => model.UserInfo.UserStatus, new { @maxlength = 20, @readonly = "readonly" })*@
                            @Html.DropDownList("UserStatus", new SelectList(new List<SelectListItem> {
                            new SelectListItem { Text="正常", Value = "1" },
                            new SelectListItem { Text="锁定", Value = "2" },
                            new SelectListItem { Text="注销", Value = "6" }},
                                     "Value", "Text", Model.UserInfo.UserStatus), new { @class = "combox" })
                        </p>

                        <p>
                            @Html.LabelFor(model => model.UserInfo.RecommendedCode)
                            @Html.TextBoxFor(model => model.UserInfo.RecommendedCode, new { @maxlength = 20, @readonly = "readonly" })
                        </p>

                        <p>
                            @Html.LabelFor(model => model.UserInfo.Level)
                            @Html.DropDownListFor(model => model.UserInfo.Level, new SelectList(new List<SelectListItem> {
                            new SelectListItem { Text="普通会员", Value = "0" },
                            new SelectListItem { Text="创始会员", Value = "100" }},
                                "Value", "Text", Model.UserInfo.Level), new { @class = "combox" })
                            <a href="@Url.Action("EditUserLevel", "User")" id="btnUserLevel" target="ajaxTodo" title="确认要修改会员等级吗？" class="button"><span>修改会员等级</span></a>
                            @Html.Hidden("hdUserLevel", @Url.Action("EditUserLevel"))


                        </p>


                    </div>
                    <div layouth="95">
                        <!-- 用户详细信息 -->
                        <p>
                            @Html.LabelFor(model => model.UserDetailInfo.NickName)
                            @Html.TextBoxFor(model => model.UserDetailInfo.NickName, new { @maxlength = 20, @readonly = "readonly" })
                        </p>
                        <p>
                            @Html.LabelFor(model => model.UserDetailInfo.Birthday)
                            @*@Html.TextBoxFor(model => model.UserDetailInfo.Birthday, new { @maxlength = 20, @readonly = "readonly" })*@
                            <input type="text" id="Birthday" name="Birthday" value="@Model.UserDetailInfo.Birthday" class="date" style="width: 120px" /><a class="inputDateButton" href="javascript:;">选择</a>
                        </p>
                        <p>
                            @Html.LabelFor(model => model.UserDetailInfo.Sex)
                            @*@Html.TextBoxFor(model => model.UserDetailInfo.Sex, new { @maxlength = 20, @readonly = "readonly" })*@
                            @Html.DropDownList("Sex", new SelectList(new List<SelectListItem> {
                            new SelectListItem { Text="男", Value = "1" },
                            new SelectListItem { Text="女", Value = "0" },
                            new SelectListItem { Text="保密", Value = "2" }},
                                            "Value", "Text", Model.UserDetailInfo.Sex), new { @class = "combox" })
                        </p>
                        <p>
                            @Html.LabelFor(model => model.UserDetailInfo.IDCard)
                            @Html.TextBoxFor(model => model.UserDetailInfo.IDCard, new { @maxlength = 20, @readonly = "readonly" })
                        </p>
                        <p>
                            @Html.LabelFor(model => model.UserDetailInfo.RealName)
                            @Html.TextBoxFor(model => model.UserDetailInfo.RealName, new { @maxlength = 20, @readonly = "readonly" })
                        </p>

                        <p>
                            @Html.LabelFor(model => model.UserDetailInfo.DistrictID)
                            @{Html.RenderAction("Divisions", "Common", new { id = Model.UserDetailInfo == null || Model.UserDetailInfo.DistrictID == null ? 0 : Model.UserDetailInfo.DistrictID, bindName = "BDVIdL" });}
                        </p>

                        <p>
                            @Html.LabelFor(model => model.UserDetailInfo.Location)
                            @Html.TextBoxFor(model => model.UserDetailInfo.Location, new { @maxlength = 50, @readonly = "readonly" })
                        </p>
                        <p>
                            @Html.LabelFor(model => model.UserDetailInfo.MaritalStatus)
                            @Html.TextBoxFor(model => model.UserDetailInfo.MaritalStatus, new { @maxlength = 20, @readonly = "readonly" })
                        </p>
                        <p>
                            @Html.LabelFor(model => model.UserDetailInfo.Salary)
                            @Html.TextBoxFor(model => model.UserDetailInfo.Salary, new { @maxlength = 20, @readonly = "readonly" })
                        </p>
                        <p>
                            @Html.LabelFor(model => model.UserDetailInfo.Hobbies)
                            @Html.TextAreaFor(model => model.UserDetailInfo.Hobbies, new { @maxlength = 20, @width = "400", @readonly = "readonly", @class = "textarea" })
                        </p>
                    </div>
                    <!-- 用户收货地址信息 -->
                    <!--列表页-->
                    <div layouth="95">
                        <table class="table" width="100%">
                            <thead>
                                <tr>
                                    <th width="10" align="center"></th>
                                    <th width="120" align="center">收件人</th>
                                    <th width="80" align="center">地址</th>
                                    <th width="100" align="center">固话</th>
                                    <th width="150" align="center">手机</th>
                                    <th width="100" align="center">添加时间</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (@Model.User_ConsigneeAddressList != null)
                                {
                                    foreach (var item in @Model.User_ConsigneeAddressList)
                                    {
                                        <tr target="caid" rel="@item.ID">
                                            <td></td>
                                            <td>@item.Consignee</td>
                                            <td>@(item.DistrictName + item.Address)</td>
                                            <td>@item.Phone</td>
                                            <td>@item.MPNo</td>
                                            <td>@UIHelper.FormatDate(item.Obj_Cdate)</td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>

                </div>

                <div class="tabsFooter">
                    <div class="tabsFooterContent"></div>
                </div>

            </div>
        </div>

        <div class="formBar">
                <ul>
                    @*<li><a class="buttonActive" href="javascript:;"><span>保存</span></a></li>*@
                    <li><div class="buttonActive"><div class="buttonContent"><button type="submit" id="btnSave">保存</button></div></div></li>
                    <li>
                        <div class="button"><div class="buttonContent"><button type="button" class="close">取消</button></div></div>
                    </li>
                </ul>
            </div>

</form>
</div>


