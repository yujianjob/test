<?xml version="1.0" encoding="GBK"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd" >
	
<bean id="datasource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
	<property name="url" value="${datasource.url}" />
	<property name="username" value="${datasource.username}" />
	<property name="password" value="${datasource.password}" />
	<property name="initialSize" value="${datasource.initialSize}" />
	<property name="minIdle" value="${datasource.minIdle}" />
	<property name="maxActive" value="${datasource.maxActive}" />
	<property name="maxWait" value="${datasource.maxWait}" />
	<property name="timeBetweenEvictionRunsMillis" value="${datasource.timeBetweenEvictionRunsMillis}" />
	<property name="minEvictableIdleTimeMillis" value="${datasource.minEvictableIdleTimeMillis}" />
	<property name="validationQuery" value="${datasource.validationQuery}" />
	<property name="testWhileIdle" value="${datasource.testWhileIdle}" />
	<property name="testOnBorrow" value="${datasource.testOnBorrow}" />
	<property name="testOnReturn" value="${datasource.testOnReturn}" />
	<property name="poolPreparedStatements" value="${datasource.poolPreparedStatements}" />
	<property name="maxPoolPreparedStatementPerConnectionSize" value="${datasource.maxPoolPreparedStatementPerConnectionSize}" />
	<property name="filters" value="${datasource.filters}" />
</bean>

<bean id="hibernateSessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
	<property name="dataSource" ref="datasource" />
	<property name="configurationClass" value="org.hibernate.cfg.AnnotationConfiguration" />
	<property name="configLocation" value="classpath:/META-INF/hibernate/userappserver-hibernate.xml" />
	<property name="hibernateProperties">
		<props>
			<prop key="hibernate.dialect">${hibernate.dialect}</prop>
			<prop key="hibernate.show_sql">${hibernate.showSql}</prop>
			<prop key="hibernate.use_outer_join">${hibernate.useOuterJoin}</prop>
			<prop key="hibernate.jdbc.use_get_generated_keys">${hibernate.jdbc.useGetGeneratedKeys}</prop>
			<prop key="hibernate.max_fetch_depth">${hibernate.maxFetchDepth}</prop>
			<prop key="hibernate.cache.provider_class">${hibernate.cache.providerClass}</prop>
			<prop key="swarmcache.lru.size">${swarmcache.lru.size}</prop>
			<prop key="swarmcache.multicast.ip">${swarmcache.multicast.ip}</prop>
			<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
			<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
		</props>
	</property>
</bean>

<bean id="jdbc.transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<property name="dataSource" ref="datasource" />
</bean>

<bean id="hibernate.transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
	<property name="sessionFactory" ref="hibernateSessionFactory" />
</bean>

<tx:annotation-driven transaction-manager="hibernate.transactionManager"/>

</beans>
